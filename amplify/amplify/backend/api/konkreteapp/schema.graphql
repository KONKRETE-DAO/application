type GalleryImageModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  url: AWSURL
  estatemodelID: ID! @index(name: "byEstateModel")
}

type HighlightModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  value: String
  estatemodelID: ID! @index(name: "byEstateModel")
}

type GMapsConfigModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  center: CoordinateJSON
  marker: CoordinateJSON
  zoom: Int
}

type CoordinateJSON {
  latitude: Float
  longitude: Float
}

enum RentalTypeEnum {
  LONG_TERM
  SHORT_TERM
}

enum PropertyTypeEnum {
  BUILDING
  APARTMENT
  RETAIL
}

type AddressJSON {
  streetNumber: String
  streetName: String
  neighborhoodName: String
  cityName: String
  state: String
  zip: String
  countyName: String
}

enum AssetTypeEnum {
  RESIDENTIAL
}

type EstateModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  slug: String
  name: String
  apr: Float
  isWaitlist: Boolean
  address: AddressJSON
  description: String
  expectedIncome: Float
  rentStartDate: AWSDate
  rentPerToken: Float
  tokenPrice: Float
  assetType: AssetTypeEnum
  propertyType: PropertyTypeEnum
  neighborhood: String
  bedsNumber: RentalTypeEnum
  rentalStrategy: String
  trustIndice: Float
  acquisitionPrice: Float
  tokensNumber: Int
  totalPrice: Float
  mortgage: Float
  rentalIncome: Float
  netRentalIncome: Float
  internalRateOfReturn: Float
  untitledfield: String
  GMapsConfigModel: GMapsConfigModel @hasOne
  coverImageUrl: AWSURL
  refurbishment: Float
  available: Boolean
  debt: Float
  HighlightModels: [HighlightModel] @hasMany(indexName: "byEstateModel", fields: ["id"])
  GalleryImageModels: [GalleryImageModel] @hasMany(indexName: "byEstateModel", fields: ["id"])
  surface: Float
}
 